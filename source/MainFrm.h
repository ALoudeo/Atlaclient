//---------------------------------------------------------------------------
#ifndef MainFrmH
#define MainFrmH
//---------------------------------------------------------------------------
#include <Classes.hpp>
#include <Controls.hpp>
#include <StdCtrls.hpp>
#include <Forms.hpp>
#include <Menus.hpp>
#include <ExtCtrls.hpp>
#include <ImgList.hpp>
#include <ComCtrls.hpp>
#include <ToolWin.hpp>
#include <Dialogs.hpp>
#include <Buttons.hpp>
#include <inifiles.hpp>
#include <ActnList.hpp>
#include "Trayicon.h"
//---------------------------------------------------------------------------
class TAtlaForm : public TForm
{
__published:	// IDE-managed Components
    TMainMenu *MainMenu1;
    TMenuItem *miGame;
    TMenuItem *Exit1;
    TMenuItem *Help1;
    TMenuItem *N1;
    TMenuItem *miGameNew;
    TMenuItem *miGameChange;
    TMenuItem *N2;
    TMenuItem *miLoadReport;
    TMenuItem *miShowItemTypes;
    TPanel *PanelMain;
    TPanel *PanelMap;
    TSplitter *Splitter1;
    TPanel *PanelViewer;
    TImage *ImageMap;
    TMenuItem *miView;
    TImageList *MapImages;
    TMenuItem *miLevelUp;
    TMenuItem *miLevelDown;
    TToolBar *ToolBar;
    TImageList *InfoImages;
    TOpenDialog *OpenDialog;
    TMenuItem *N3;
    TMenuItem *miPrevTurn;
    TMenuItem *miNextTurn;
    TTreeView *TreeView;
	TSplitter *Splitter2;
    TListBox *View;
    TToolButton *bnShowEvents;
    TPopupMenu *popupViewRegObject;
    TMenuItem *miLinkInner;
    TMenuItem *miGotoLinked;
    TMenuItem *N4;
  TMenuItem *miSaveOrder;
    TMenuItem *miLoadOrder;
    TPopupMenu *popupViewUnit;
    TMenuItem *miEditOrder;
    TMenuItem *miAddOrder;
    TMenuItem *miAddOrderCustom;
    TMenuItem *miAddOrderLocDescr;
    TMenuItem *N5;
    TMenuItem *miAddOrderComment;
    TMenuItem *miDeleteOrder;
    TPopupMenu *popupFactionMessages;
    TMenuItem *miFacClearErrors;
    TMenuItem *miFacClearError;
    TMenuItem *miFacClearBattles;
    TMenuItem *miFacClearBattle;
    TMenuItem *miFacClearEvents;
    TMenuItem *miFacClearEvent;
  TToolButton *sep2;
    TLabel *lbCoord;
    TEdit *edFindUnit;
  TMenuItem *miAddOrderFormNew;
    TMenuItem *N7;
    TMenuItem *miDeleteNewUnit;
    TPopupMenu *popupViewRegion;
    TMenuItem *miSetTaxInc;
    TImageList *ToolBarImages;
  TToolButton *sep1;
    TLabel *Label1;
    TMenuItem *miAddOrderDestroy;
    TMenuItem *miAddOrderEntertain;
    TMenuItem *miAddOrderLeave;
    TMenuItem *miAddOrderPillage;
    TMenuItem *miAddOrderTax;
    TMenuItem *miAddOrderWork;
    TMenuItem *miAddOrderAutotax;
    TMenuItem *miAddOrderAvoid;
    TMenuItem *miAddOrderBehind;
    TMenuItem *miAddOrderGuard;
    TMenuItem *miAddOrderHold;
    TMenuItem *miAddOrderNoaid;
  TToolButton *sep6;
    TMenuItem *miAddOrderStudy;
    TMenuItem *miAddOrderCombat;
	TMenuItem *miAddOrderForget;
    TMenuItem *miAddOrderProduce;
    TMenuItem *miAddOrderGive;
    TMenuItem *miAddOrderBuy;
    TMenuItem *miAddOrderSell;
    TToolButton *bnRunOrders;
    TMenuItem *miGotoOrderTarget;
    TLabel *Label2;
    TEdit *edTurnNumber;
    TMenuItem *miAddOrderTeach;
    TMenuItem *miAnalyze;
    TMenuItem *miAdvProds;
  TToolButton *sep4;
    TMenuItem *N6;
    TMenuItem *miProdModeSetup;
    TMenuItem *miGameSave;
    TMenuItem *miVerifynextturn;
    TMenuItem *miAddOrderClaim;
    TMenuItem *miAddOrderReveal;
    TMenuItem *miAddOrderConsume;
    TMenuItem *miAddOrderEnter;
    TMenuItem *N8;
    TMenuItem *miCopyOrder;
    TMenuItem *miPasteOrder;
    TMenuItem *miSetWorkInc;
    TMenuItem *miSetEntInc;
    TMenuItem *miAddOrderMove;
    TMenuItem *miAddOrderAdvance;
    TMenuItem *miAddOrderSail;
    TToolButton *bnLevelUp;
    TToolButton *bnLevelDown;
  TToolButton *sep5;
    TToolButton *bnRunAutoOrders;
    TMenuItem *miAddOrderAuto;
    TMenuItem *miAddOrderAutoGive;
    TMenuItem *miFix;
    TMenuItem *miAdvancedProductsFix;
    TToolButton *bnTownMode;
    TToolButton *bnProdMode;
    TToolButton *bnWedgeMode;
    TMenuItem *miWedgemodesettings;
 TMenuItem *Exitwithoutsaving1;
 TMenuItem *N9;
 TMenuItem *VerTime1;
    TMenuItem *miTemporary;
    TActionList *ActionList1;
    TAction *actEnableTemp;
 TMenuItem *miAddOrderBuild;
 TAction *actLevelUp;
 TAction *actLevelDown;
 TAction *actPrevTurn;
 TAction *actNextTurn;
 TToolButton *bnPrevTurn;
 TToolButton *bnNextTurn;
  TToolButton *sep7;
 TMenuItem *miGotoLastInfo;
    TMenuItem *miStoreTurns;
        TMenuItem *miWeather;
        TMenuItem *t21;
        TMenuItem *t31;
        TMenuItem *t41;
        TMenuItem *r51;
        TMenuItem *t61;
        TMenuItem *t71;
        TMenuItem *t81;
        TMenuItem *t91;
        TMenuItem *t101;
        TMenuItem *t111;
        TMenuItem *t11;
        TMenuItem *t121;
        TMenuItem *N10;
        TMenuItem *miShowRegionInfo;
        TAction *actShowRegInfo;
        TMenuItem *miShowMap;
        TAction *actShowMap;
  TMenuItem *miSaveReport;
  TMenuItem *miImport;
  TMenuItem *miAtlaCart;
  TMenuItem *miOptions;
  TMenuItem *N11;
  TMenuItem *miAddClientOrder;
  TMenuItem *miReceive;
  TMenuItem *miAbout;
  TToolButton *bnPrevUnit;
  TToolButton *bnNextUnit;
  TToolButton *sep3;
  TAction *actPrevUnit;
  TAction *actNextUnit;
  TMenuItem *N12;
  TMenuItem *miPrevUnit;
  TMenuItem *miNextUnit;
 TMenuItem *N13;
 TMenuItem *N14;
 TMenuItem *miSavereginfo;
 TMenuItem *miCopyToClipboard2;
 TMenuItem *miCopyToClipboard1;
 TMenuItem *miCopyToClipboard3;
 TMenuItem *miCopyToClipboard4;
 TPopupMenu *popupViewDefault;
 TMenuItem *miCopyToClipboard0;
 TAction *actCopyToClipboard;
 TMenuItem *miSaveMap;
    TMenuItem *miAddOrderNOP;
    TMenuItem *miMoveOrderUp;
    TMenuItem *miMoveOrderDown;
    TMenuItem *miCountLoadedTurns;
    TMenuItem *miMinimizeTurns;
    TMenuItem *miUpdateTurns;
    TMenuItem *miAddOrderAutoMove;
    TMenuItem *miCrystalBall;
    TMenuItem *miBattleSim;
    TMenuItem *N15;
    TMenuItem *miAddAttacker;
    TMenuItem *miAddDefender;
    TMenuItem *miFacBattleToSim;
    TMenuItem *miVerifyTypes;
    TMenuItem *N16;
    TMenuItem *miShowWeatherRegions;
    TMenuItem *miLoadFromClipboard;
    TMenuItem *miSetFlags;
    TMenuItem *miEditOrders;
    TMenuItem *miAddOrderCast;
    TMenuItem *miMail;
    TMenuItem *miSendTimesRequest;
    TMenuItem *miSendOrders;
    TMenuItem *N17;
    TMenuItem *miViewFactions;
    TMenuItem *miSetRegDescription;
    TMenuItem *miAddOrderWithdrawClient;
    TMenuItem *miAddOrderNoSpoils;
    TMenuItem *miAddOrderNoCross;
    TMenuItem *miAddAttackers;
    TMenuItem *miAddDefenders;
    TComboBox *cbWedgeGroup;
    TToolButton *ToolButton1;
    TMenuItem *miCopyRegToClipboard;
    TMenuItem *miDeleteLastTurn;
    TAction *actHideClient;
  TTrayIcon *TrayIcon;
    TMenuItem *miAddOrderSpoils;
    TMenuItem *miSetRegionUserInfo;
    TMenuItem *miViewMages;
    TMenuItem *miViewTaxRegions;
  TMenuItem *miAddOrderAutoWarning;
  TMenuItem *miCopyNewUnit;
  TMenuItem *miChanges;
  TMenuItem *miChangesCollect;
  TMenuItem *miChangesView;
  TMenuItem *miAnalyzeRegionPop;
  TMenuItem *miSetLevelSize;
  TMenuItem *miAddOrderNameDescribe;
  TMenuItem *miViewGates;
  TMenuItem *miShowRegionList;
  TAction *actShowRegionList;
  TMenuItem *miAddToRegionList;
  TMenuItem *miSupportBuilding;
  TMenuItem *miSpecialists;
  TMenuItem *miViewUnits;
  TSplitter *Splitter3;
  TPopupMenu *pmProdMode;
  TMenuItem *miProdModeSetup2;
  TPopupMenu *pmWedgeMode;
  TMenuItem *miWedgemodesettings2;
  TPopupMenu *pmShowEvents;
  TMenuItem *miRunOrdersOnChange;
  TMenuItem *N18;
  TMenuItem *miShowDiscardWarnings;
  TMenuItem *miShowNoMonthLongErrors;
  TMenuItem *miShowTaxWarnings;
  TMenuItem *miShowBorrowsWarnings;
  TMenuItem *N19;
  TMenuItem *miShowRegionDataFound;
  TPopupMenu *pmLevelChange;
  TMenuItem *miUpdateNonLocal;
  TMenuItem *miShowMoveError;
  TMenuItem *N20;
  TMenuItem *miAddOrderSteal;
  TMenuItem *miAddOrderAssassinate;
  TMenuItem *miAddOrderAttack;
  TMenuItem *miExportMages;
  TMenuItem *miExprot;
  TMenuItem *miShortCuts;
  TMenuItem *miClearImportedMages;
  TMenuItem *miExportMage;
  TTimer *AutoSaveTimer;
  TMenuItem *miPlugins;
  TMenuItem *miConfigure;
  TMenuItem *miPluginsRoot;
  TMenuItem *miPluginsUnload;
  TMenuItem *miPluginsReload;
  TMenuItem *miAddOrderWithdraw;
  TMenuItem *miFacGotoBattle;
  TMenuItem *miFacBattleToClipboard;
  TMenuItem *miAnalyzeBalance;
  TMenuItem *miAnalyzeProducts;
  TMenuItem *miShowItObjReports;
  TMenuItem *miDeleteFromRegionList;
  TMenuItem *miAddOrderPromote;
  TMenuItem *miAnalyzeCityRegion;
  TAction *actShowEvents;
  TAction *actRunOrders;
  TAction *actRunAutoOrders;
  TAction *actTownMode;
  TAction *actProdMode;
  TAction *actWedgeMode;
  TPopupMenu *pmToolBar;
  TMenuItem *miShowEvents;
  TMenuItem *miRunOrders;
  TMenuItem *miRunAutoOrders;
  TMenuItem *miTownMode;
  TMenuItem *miProdMode;
  TMenuItem *miWedgeMode;
  TAction *actPrevExprUnit;
  TAction *actNextExprUnit;
  TMenuItem *miNextExprUnit;
  TMenuItem *miPrevExprUnit;
  TMenuItem *miSetUnitExpr;
  TMenuItem *miShowTeachNonLocNotStudy;
        TMenuItem *Objecttypes1;
        TMenuItem *miAddOrderSharing;
        TToolButton *btInfMode;
        TPopupMenu *pmInfMapM;
        TMenuItem *Wages1;
        TMenuItem *Taxincome1;
        TMenuItem *Entertaimens1;
        TMenuItem *Work1;
        TMenuItem *TownTrade1;
        TMenuItem *miCFr;
        TMenuItem *miCF;
        TMenuItem *Test1;
        TMenuItem *TURNorder1;
	TPanel *Panel1;
	TComboBox *cbFacDiap;
	TSpeedButton *btAllFoff;
	TComboBox *cbProfSel;
	TSpeedButton *btFiltLead;
	TSpeedButton *SpeedButton3;
	TSpeedButton *btFF;
	TSpeedButton *SpeedButton5;
	TPopupMenu *pmSelFlead;
	TMenuItem *miFlead0;
	TMenuItem *miFlead1;
	TMenuItem *miFlead2;
	TPopupMenu *pmSelFflag;
	TMenuItem *miNoFF;
	TMenuItem *miSetFF;
	TPopupMenu *pmSelMO;
	TSpeedButton *btFiltMO;
	TSpeedButton *SpeedButton2;
	TMenuItem *miAdvMO;
	TMenuItem *miBuiMO;
	TMenuItem *miEntMO;
	TMenuItem *miMovMO;
	TMenuItem *miProMO;
	TMenuItem *miSaiMO;
	TMenuItem *miStuMO;
	TMenuItem *miTeaMO;
	TMenuItem *miWorMO;
	TMenuItem *miNofilterMO;
	TMenuItem *miNoOrder;
	TMenuItem *miSkillsTree;
	TMenuItem *Scripts1;
	TMenuItem *miExecScr;
	TMenuItem *Editor1;
	TMenuItem *N21;
	TMenuItem *miAddOrderAutoFollow;
    void __fastcall FormShow(TObject *Sender);
    void __fastcall FormCloseQuery(TObject *Sender, bool &CanClose);
    void __fastcall Exit1Click(TObject *Sender);
    void __fastcall FormCreate(TObject *Sender);
    void __fastcall FormDestroy(TObject *Sender);
    void __fastcall miGameNewClick(TObject *Sender);
    void __fastcall miGameChangeClick(TObject *Sender);
    void __fastcall miLoadReportClick(TObject *Sender);
	void __fastcall miShowItemTypesClick(TObject *Sender);
    void __fastcall PanelMapResize(TObject *Sender);
    void __fastcall actLevelUpExecute(TObject *Sender);
    void __fastcall actLevelDownExecute(TObject *Sender);
    void __fastcall actNextTurnExecute(TObject *Sender);
    void __fastcall ImageMapMouseDown(TObject *Sender, TMouseButton Button,
          TShiftState Shift, int X, int Y);
    void __fastcall bnShowEventsClick(TObject *Sender);
    void __fastcall actPrevTurnExecute(TObject *Sender);
    void __fastcall TreeViewMouseUp(TObject *Sender, TMouseButton Button,
          TShiftState Shift, int X, int Y);
    void __fastcall TreeViewChange(TObject *Sender, TTreeNode *Node);
    void __fastcall ViewDblClick(TObject *Sender);
    void __fastcall ViewClick(TObject *Sender);
    void __fastcall ViewMouseDown(TObject *Sender, TMouseButton Button,
          TShiftState Shift, int X, int Y);
    void __fastcall popupViewRegObjectPopup(TObject *Sender);
    void __fastcall miLinkInnerClick(TObject *Sender);
    void __fastcall miGotoLinkedClick(TObject *Sender);
    void __fastcall miSaveOrderClick(TObject *Sender);
    void __fastcall miLoadOrderClick(TObject *Sender);
    void __fastcall popupViewUnitPopup(TObject *Sender);
    void __fastcall miEditOrderClick(TObject *Sender);
    void __fastcall miAddOrderCustomClick(TObject *Sender);
    void __fastcall miAddOrderCommentClick(TObject *Sender);
    void __fastcall miAddOrderLocDescrClick(TObject *Sender);
    void __fastcall miDeleteOrderClick(TObject *Sender);
    void __fastcall miFacClearErrorsClick(TObject *Sender);
    void __fastcall miFacClearErrorClick(TObject *Sender);
    void __fastcall miFacClearBattlesClick(TObject *Sender);
    void __fastcall miFacClearEventsClick(TObject *Sender);
    void __fastcall miFacClearBattleClick(TObject *Sender);
    void __fastcall miFacClearEventClick(TObject *Sender);
    void __fastcall ImageMapMouseMove(TObject *Sender, TShiftState Shift,
          int X, int Y);
    void __fastcall edFindUnitKeyPress(TObject *Sender, char &Key);
    void __fastcall miAddOrderFormNewClick(TObject *Sender);
    void __fastcall miDeleteNewUnitClick(TObject *Sender);
    void __fastcall miSetTaxIncClick(TObject *Sender);
    void __fastcall popupViewRegionPopup(TObject *Sender);
    void __fastcall miAddOrderSimpleClick(TObject *Sender);
    void __fastcall miAddOrderByteClick(TObject *Sender);
    void __fastcall miAddOrderAbrClick(TObject *Sender);
    void __fastcall miAddOrderGiveClick(TObject *Sender);
    void __fastcall miAddOrderBuySellClick(TObject *Sender);
    void __fastcall bnRunOrdersClick(TObject *Sender);
    void __fastcall miGotoOrderTargetClick(TObject *Sender);
    void __fastcall edTurnNumberKeyPress(TObject *Sender, char &Key);
    void __fastcall miAddOrderTeachClick(TObject *Sender);
    void __fastcall bnTownModeClick(TObject *Sender);
	void __fastcall bnProdModeClick(TObject *Sender);
    void __fastcall miProdModeSetupClick(TObject *Sender);
    void __fastcall miAdvProdsClick(TObject *Sender);
    void __fastcall miGameSaveClick(TObject *Sender);
    void __fastcall miVerifynextturnClick(TObject *Sender);
    void __fastcall miAddOrderInt(TObject *Sender);
    void __fastcall TreeViewCompare(TObject *Sender, TTreeNode *Node1,
          TTreeNode *Node2, int Data, int &Compare);
    void __fastcall miAddOrderIntClick(TObject *Sender);
    void __fastcall miCopyOrderClick(TObject *Sender);
    void __fastcall miPasteOrderClick(TObject *Sender);
    void __fastcall miSetWorkIncClick(TObject *Sender);
    void __fastcall miSetEntIncClick(TObject *Sender);
    void __fastcall miAddOrderMovingClick(TObject *Sender);
    void __fastcall bnRunAutoOrdersClick(TObject *Sender);
    void __fastcall miAddOrderAutoGiveClick(TObject *Sender);
    void __fastcall miAdvancedProductsFixClick(TObject *Sender);
    void __fastcall bnWedgeModeClick(TObject *Sender);
    void __fastcall miWedgemodesettingsClick(TObject *Sender);
 void __fastcall Exitwithoutsaving1Click(TObject *Sender);
 void __fastcall VerTime1Click(TObject *Sender);
    void __fastcall actEnableTempExecute(TObject *Sender);
    void __fastcall miAddOrderBuildClick(TObject *Sender);
 void __fastcall miGotoLastInfoClick(TObject *Sender);
    void __fastcall miStoreTurnsClick(TObject *Sender);
        void __fastcall actShowRegInfoExecute(TObject *Sender);
        void __fastcall actShowMapExecute(TObject *Sender);
  void __fastcall miSaveReportClick(TObject *Sender);
  void __fastcall miAtlaCartClick(TObject *Sender);
  void __fastcall miOptionsClick(TObject *Sender);
  void __fastcall miReceiveClick(TObject *Sender);
  void __fastcall miAboutClick(TObject *Sender);
  void __fastcall actPrevUnitExecute(TObject *Sender);
  void __fastcall actNextUnitExecute(TObject *Sender);
 void __fastcall miSavereginfoClick(TObject *Sender);
 void __fastcall actCopyToClipboardClick(TObject *Sender);
 void __fastcall popupFactionMessagesPopup(TObject *Sender);
 void __fastcall popupViewDefaultPopup(TObject *Sender);
 void __fastcall miSaveMapClick(TObject *Sender);
    void __fastcall miMoveOrderUpClick(TObject *Sender);
    void __fastcall miMoveOrderDownClick(TObject *Sender);
    void __fastcall miCountLoadedTurnsClick(TObject *Sender);
    void __fastcall miMinimizeTurnsClick(TObject *Sender);
    void __fastcall miUpdateTurnsClick(TObject *Sender);
    void __fastcall miAddOrderAutoMoveClick(TObject *Sender);
    void __fastcall miCrystalBallClick(TObject *Sender);
    void __fastcall miBattleSimClick(TObject *Sender);
    void __fastcall miAddAttackerClick(TObject *Sender);
    void __fastcall miAddDefenderClick(TObject *Sender);
    void __fastcall miFacBattleToSimClick(TObject *Sender);
	void __fastcall miVerifyTypesClick(TObject *Sender);
    void __fastcall TreeViewKeyDown(TObject *Sender, WORD &Key,
          TShiftState Shift);
    void __fastcall miShowWeatherRegionsClick(TObject *Sender);
    void __fastcall miLoadFromClipboardClick(TObject *Sender);
    void __fastcall miSetFlagsClick(TObject *Sender);
    void __fastcall miEditOrdersClick(TObject *Sender);
    void __fastcall miAddOrderCastClick(TObject *Sender);
    void __fastcall miSendTimesRequestClick(TObject *Sender);
    void __fastcall miSendOrdersClick(TObject *Sender);
    void __fastcall miMailClick(TObject *Sender);
    void __fastcall miViewFactionsClick(TObject *Sender);
    void __fastcall miSetRegDescriptionClick(TObject *Sender);
    void __fastcall miAddOrderWithdrawClick(TObject *Sender);
    void __fastcall miAddOrderWithdrawClientClick(TObject *Sender);
    void __fastcall miAddAttackersClick(TObject *Sender);
    void __fastcall miAddDefendersClick(TObject *Sender);
    void __fastcall cbWedgeGroupChange(TObject *Sender);
    void __fastcall miCopyRegToClipboardClick(TObject *Sender);
    void __fastcall miDeleteLastTurnClick(TObject *Sender);
    void __fastcall actHideClientExecute(TObject *Sender);
    void __fastcall TrayIconRestore(TObject *Sender);
    void __fastcall miSetRegionUserInfoClick(TObject *Sender);
    void __fastcall miViewMagesClick(TObject *Sender);
    void __fastcall miViewTaxRegionsClick(TObject *Sender);
  void __fastcall miAddOrderAutoWarningClick(TObject *Sender);
  void __fastcall miCopyNewUnitClick(TObject *Sender);
  void __fastcall miChangesCollectClick(TObject *Sender);
  void __fastcall miChangesViewClick(TObject *Sender);
  void __fastcall miAnalyzeRegionPopClick(TObject *Sender);
  void __fastcall miSetLevelSizeClick(TObject *Sender);
  void __fastcall miAddOrderNameDescribeClick(TObject *Sender);
  void __fastcall miViewGatesClick(TObject *Sender);
  void __fastcall actShowRegionListExecute(TObject *Sender);
  void __fastcall miAddToRegionListClick(TObject *Sender);
  void __fastcall miSupportBuildingClick(TObject *Sender);
  void __fastcall miSpecialistsClick(TObject *Sender);
  void __fastcall miViewUnitsClick(TObject *Sender);
  void __fastcall miViewClick(TObject *Sender);
  void __fastcall pmShowEventsPopup(TObject *Sender);
  void __fastcall miRunOrdersOnChangeClick(TObject *Sender);
  void __fastcall miShowDiscardWarningsClick(TObject *Sender);
  void __fastcall miShowNoMonthLongErrorsClick(TObject *Sender);
  void __fastcall miShowTaxWarningsClick(TObject *Sender);
  void __fastcall miShowRegionDataFoundClick(TObject *Sender);
  void __fastcall pmLevelChangePopup(TObject *Sender);
  void __fastcall pmLevelChangeClick(TObject *Sender);
  void __fastcall miUpdateNonLocalClick(TObject *Sender);
  void __fastcall miShowMoveErrorClick(TObject *Sender);
  void __fastcall miAddOrderStealClick(TObject *Sender);
  void __fastcall miAddOrderAssassinateClick(TObject *Sender);
  void __fastcall miAddOrderAttackClick(TObject *Sender);
  void __fastcall miExportMagesClick(TObject *Sender);
  void __fastcall miShowBorrowsWarningsClick(TObject *Sender);
  void __fastcall miShortCutsClick(TObject *Sender);
  void __fastcall FormShortCut(TWMKey &Msg, bool &Handled);
  void __fastcall miClearImportedMagesClick(TObject *Sender);
  void __fastcall miExportMageClick(TObject *Sender);
  void __fastcall AutoSaveTimerTimer(TObject *Sender);
  void __fastcall miRunPluginClick(TObject *Sender);
  void __fastcall miConfigurePluginClick(TObject *Sender);
  void __fastcall miPluginOrderClick(TObject *Sender);
  void __fastcall miPluginsUnloadClick(TObject *Sender);
  void __fastcall miPluginsReloadClick(TObject *Sender);
  void __fastcall miFacGotoBattleClick(TObject *Sender);
  void __fastcall miFacBattleToClipboardClick(TObject *Sender);
  void __fastcall miAnalyzeBalanceClick(TObject *Sender);
  void __fastcall miAnalyzeProductsClick(TObject *Sender);
  void __fastcall miShowItObjReportsClick(TObject *Sender);
  void __fastcall miDeleteFromRegionListClick(TObject *Sender);
  void __fastcall miAnalyzeCityRegionClick(TObject *Sender);
  void __fastcall TreeViewDblClick(TObject *Sender);
  void __fastcall actPrevExprUnitExecute(TObject *Sender);
  void __fastcall actNextExprUnitExecute(TObject *Sender);
  void __fastcall miSetUnitExprClick(TObject *Sender);
  void __fastcall miShowTeachNonLocNotStudyClick(TObject *Sender);
  void __fastcall Objecttypes1Click(TObject *Sender);
  void __fastcall btInfModeClick(TObject *Sender);
        void __fastcall Entertaimens1Click(TObject *Sender);
        void __fastcall TownTrade1Click(TObject *Sender);
        void __fastcall ViewDrawItem(TWinControl *Control, int Index,
          TRect &Rect, TOwnerDrawState State);
        void __fastcall TreeViewCustomDrawItem(TCustomTreeView *Sender,
          TTreeNode *Node, TCustomDrawState State, bool &DefaultDraw);
        void __fastcall TreeViewCustomDraw(TCustomTreeView *Sender,
          const TRect &ARect, bool &DefaultDraw);
        void __fastcall SelFacClick(TObject *Sender);
        void __fastcall TURNorder1Click(TObject *Sender);
	void __fastcall cbFacDiapChange(TObject *Sender);
	void __fastcall SpeedButton3Click(TObject *Sender);
	void __fastcall miFlead2Click(TObject *Sender);
	void __fastcall SpeedButton5Click(TObject *Sender);
	void __fastcall miNoFFClick(TObject *Sender);
	void __fastcall miSetFFClick(TObject *Sender);
	void __fastcall btFFClick(TObject *Sender);
	void __fastcall btFiltLeadClick(TObject *Sender);
	void __fastcall btAllFoffClick(TObject *Sender);
	void __fastcall cbProfSelChange(TObject *Sender);
	void __fastcall SpeedButton2Click(TObject *Sender);
	void __fastcall miFiltMO(TObject *Sender);
	void __fastcall btFiltMOClick(TObject *Sender);
	void __fastcall miSkillsTreeClick(TObject *Sender);
	void __fastcall Editor1Click(TObject *Sender);
	void __fastcall ExecScriptClick(TObject *Sender);
	void __fastcall miAddOrderAutoFollowClick(TObject *Sender);
private:
	int FTekInfMode;
	int facdiap; //-2 - all, -3 - local, -4 - nonlocal, -5 - friendly, -6 -unfriendly
	AnsiString FskilFiltr;
	int FmoFiltr;
	void setTekInfMode(int val);
	void LoadOptions();
	void SaveOptions();
	void __fastcall SetTreeViewSelected(TTreeNode * value);
	void MakeFacList();
	void MakeScrMenu();
	TTreeNode * __fastcall GetTreeViewSelected();	// User declarations
protected:
	VTreeNodes *vtreenodes;
	VListItems *vlistitems;
	TTreeNode *curNode;
	int MapMode;
	int NoSave;
	TColor LookFactionColor(AnsiString str);
public:		// User declarations
	__fastcall TAtlaForm(TComponent* Owner);
	virtual __fastcall ~TAtlaForm();
	void SaveGameList();
	void VerGameLoaded();
	void DrawMap();
	void DrawRegion(TCanvas *Canv,ARegion *reg,int x,int y,int z, int xc, int yc);
	void DrawGrid(TCanvas *Canv,int xc, int yc, int grids[6], bool bold); //0-none,1-wall,2-prohod,3-selected
	void DrawRegionTown(TCanvas * Canv,ARegion *reg, int xc, int yc);
	void DrawRegionProd(TCanvas * Canv,ARegion *reg, int xc, int yc);
	void DrawRegionInfoI(TCanvas * Canv,ARegion *reg, int xc, int yc);
	void DrawRegionWedge(TCanvas * Canv,ARegion *reg, int xc, int yc);
	void DrawRegionMove(TCanvas * Canv,ARegion *reg, int x, int y, int z, int xc, int yc);
	void DrawRegionArrow(TCanvas * Canv, ARegionArray *ra, int x1, int y1, int x2, int y2, int x, int y, int xc, int yc);
	int AddMapImage(AnsiString fName);
	int AddInfoImage(AnsiString fName);
    int AddToolBarImage(AnsiString fName);
    int xcentr,ycentr,zcentr;
    void ChangeLevel(int dir);
    void PointToCoord(int x, int y, int & xloc, int & yloc);
    void ChangeTurn(int dir,bool load=false,bool updatemap=false);
		void ViewShow();
		void UpdateObjectsTreeInfo();
    void OnSetCurRegion();
    void MakeTreeView();
    VTreeNode* FindTreeNode(int type, int value);
    void EditOrder(int ind, AOrder *neworder=0);
    void ShowMapMode();
    bool ProcessNonLocalOrders(AOrder * ord);
    void SetlbCoords(int xloc, int yloc);
    void OnGameLoaded();
    void UpdateWedgeGroup();
    void GotoUnit(AUnit * un);
    void GotoRegion(ARegion * reg);
    AnsiString GetTempOrderName(int facnum);
    bool VerifyAutoSaveFiles();
    void HideMenuItems(TMenu *menu);
	void __fastcall WMMove(TWMMove &mes);
    void InitShortCuts();
    void __fastcall LookLocalFactions();
	bool NeedUnitInTree(AUnit *un);
    __property int TekInfMode = { read = FTekInfMode, write = setTekInfMode };
    __property TTreeNode * TreeViewSelected  = { read=GetTreeViewSelected, write=SetTreeViewSelected };

    BEGIN_MESSAGE_MAP
      VCL_MESSAGE_HANDLER(WM_MOVE, TWMMove, WMMove);
    END_MESSAGE_MAP(TForm);
};
//---------------------------------------------------------------------------
extern PACKAGE TAtlaForm *AtlaForm;
// 1 - food, 2 - normal, 4 - adv, 8 - show null, 16 - race
extern unsigned char ProdModeAttr;
//---------------------------------------------------------------------------
extern TColor infocolors[7];

extern TPopupMenu *TreeViewPopupMenu;
#endif
